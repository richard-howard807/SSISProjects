<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/21/2018 2:12:58 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DEV-BI-CLIENT-8"
  DTS:CreatorName="SBC\sgrego"
  DTS:DTSID="{E7730805-0023-46FC-A536-845EF90B9B87}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="2057"
  DTS:MaxErrorCount="2"
  DTS:ObjectName="Team Costs Upload"
  DTS:PackageType="5"
  DTS:VersionBuild="76"
  DTS:VersionGUID="{BF9BE5A0-9226-4C43-B970-21287D163D88}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{2167D5C1-382E-4F8C-B650-F10B1F54F566}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\sbc.root\usershares\Restricted\Business Services\KPI Upload\ExcelUploads\Processing\Team Costs.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[svr-liv-dwh-01.ExcelUpload]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{482CC3A6-3DF2-46BA-807F-3D9AE6B2A4E4}"
      DTS:ObjectName="svr-liv-dwh-01.ExcelUpload">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=svr-liv-dw-01;Initial Catalog=ExcelUpload;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[svr-liv-dwh-01.red_dw]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7F7CE7DA-6990-4C4A-908B-4B2477B59DBD}"
      DTS:ObjectName="svr-liv-dwh-01.red_dw">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=svr-liv-dw-01;Initial Catalog=red_dw;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[WMI Connection Manager]"
      DTS:CreationName="WMI"
      DTS:DTSID="{A8A4D568-E676-4B31-8494-F48084A1BBCF}"
      DTS:ObjectName="WMI Connection Manager">
      <DTS:ObjectData>
        <WmiConnectionManager
          ConnectionString="ServerName=\\localhost;Namespace=\root\cimv2;UseNtAuth=True;UserName=;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CAC9DFDD-5998-4D21-87B6-C50EDB779752}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ArchivePath] +  @[User::FileNamePrefix] +&quot;_&quot;+(DT_WSTR,4)Year(getdate()) + &quot;_&quot;+(DT_WSTR,2)Month(getdate())+&quot;_&quot;+(DT_WSTR,2)day(getdate())+&quot;.&quot;+@[User::FileExtension]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFile">
      <DTS:VariableValue
        DTS:DataType="8">\\sbc.root\usershares\Restricted\Business Services\KPI Upload\ExcelUploads\Archive\Team Costs_2019_5_2.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38B88A6B-2F2E-4F25-940B-255612E581D3}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::Drive] +  @[User::Path] + &quot;Archive\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchivePath">
      <DTS:VariableValue
        DTS:DataType="8">\\sbc.root\usershares\Restricted\Business Services\KPI Upload\ExcelUploads\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DDF003B3-8DAC-4AEC-82C1-49CC8A060BC1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C067C77A-CB0C-41CE-8486-B153DD804606}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Drive">
      <DTS:VariableValue
        DTS:DataType="8">\\sbc.root\usershares\Restricted\Business Services\KPI Upload</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{684154CD-F723-4111-AC23-A57917CBB5C6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::DropPath] +  @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DropFile">
      <DTS:VariableValue
        DTS:DataType="8">\\sbc.root\usershares\Restricted\Business Services\KPI Upload\ExcelUploads\Team Costs.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB04FF5F-0679-40EB-A7F5-19A99EAF95BE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::Drive] +  @[User::Path]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DropPath">
      <DTS:VariableValue
        DTS:DataType="8">\\sbc.root\usershares\Restricted\Business Services\KPI Upload\ExcelUploads\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC55359E-0C15-43D9-B681-2D5FB18370D9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExtension">
      <DTS:VariableValue
        DTS:DataType="8">xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED56A8A9-7426-4EED-9581-2AD7BB7A73B8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FileID">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84447006-DAC1-4697-8F8F-7DFF040B741E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FileNamePrefix] + &quot;*.&quot; + @[User::FileExtension]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileMask">
      <DTS:VariableValue
        DTS:DataType="8">Team Costs*.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C4F9C44-F1DB-4CBF-B5C8-AEECB9961551}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">Team Costs.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{644C1D64-A075-4D68-AE28-0B7670A76A74}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileNamePrefix">
      <DTS:VariableValue
        DTS:DataType="8">Team Costs</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A04E02AA-2E6A-4227-9EAD-E5360805D86F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::DropPath]+ @[User::FileMask]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileSourcePathFind">
      <DTS:VariableValue
        DTS:DataType="8">\\sbc.root\usershares\Restricted\Business Services\KPI Upload\ExcelUploads\Team Costs*.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{37F2976C-24B1-428A-AE10-D6B50B36147B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FileNamePrefix] +&quot;_&quot;+(DT_WSTR,4)Year(getdate()) + &quot;_&quot;+(DT_WSTR,2)Month(getdate())+&quot;_&quot;+(DT_WSTR,2)day(getdate())+&quot;.&quot;+@[User::FileExtension]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NewFileName">
      <DTS:VariableValue
        DTS:DataType="8">Team Costs_2019_5_2.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{080D0746-4E1D-4F44-828A-4322DBC2C31A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Path">
      <DTS:VariableValue
        DTS:DataType="8">\ExcelUploads\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F97FA342-FAD3-44F4-966E-F38008C45A2B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ProcessingPath] +  @[User::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingFile">
      <DTS:VariableValue
        DTS:DataType="8">\\sbc.root\usershares\Restricted\Business Services\KPI Upload\ExcelUploads\Processing\Team Costs.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{07B33980-B634-49BC-B397-14A605E3E54E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::Drive] +  @[User::Path] + &quot;Processing\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessingPath">
      <DTS:VariableValue
        DTS:DataType="8">\\sbc.root\usershares\Restricted\Business Services\KPI Upload\ExcelUploads\Processing\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{95E7F1FC-AAFB-4EFE-AAE6-8CF1B18AB5EE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;INSERT INTO [ExcelUpload].[dbo].[file_audit] ([file_old_name], [file_new_name] ) VALUES ('&quot; +@[User::FileName]+&quot;','&quot;+ @[User::NewFileName] +&quot;')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLInsertProcessing">
      <DTS:VariableValue
        DTS:DataType="8">INSERT INTO [ExcelUpload].[dbo].[file_audit] ([file_old_name], [file_new_name] ) VALUES ('Team Costs.xlsx','Team Costs_2019_5_2.xlsx')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EBE5B688-B182-4D41-B3FA-5FF918145C10}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="StaggingTableName">
      <DTS:VariableValue
        DTS:DataType="8">team_costs_staging</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09F1F406-956D-420B-8482-A1524C81BC31}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;truncate table [ExcelUpload].dbo. &quot; + @[User::StaggingTableName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TruncateStageTable">
      <DTS:VariableValue
        DTS:DataType="8">truncate table [ExcelUpload].dbo. team_costs_staging</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F660043F-1BC3-4C84-BA88-69E6934E0A9E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT * FROM __InstanceCreationEvent WITHIN 5 WHERE TargetInstance ISA 'CIM_DataFile' AND TargetInstance.Drive ='&quot;+@[User::Drive]+&quot;' AND TargetInstance.Path = '&quot;+ REPLACE( @[User::Path], &quot;\\&quot;, &quot;\\\\&quot;)  +&quot;' AND TargetInstance.FileName LIKE '&quot;+ @[User::FileNamePrefix] +&quot;%' AND TargetInstance.Extension = '&quot;+ @[User::FileExtension] +&quot;'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="WqlQuerySource">
      <DTS:VariableValue
        DTS:DataType="8">SELECT * FROM __InstanceCreationEvent WITHIN 5 WHERE TargetInstance ISA 'CIM_DataFile' AND TargetInstance.Drive ='\\sbc.root\usershares\Restricted\Business Services\KPI Upload' AND TargetInstance.Path = '\\ExcelUploads\\' AND TargetInstance.FileName LIKE 'Team Costs%' AND TargetInstance.Extension = 'xlsx'</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Insert into stagging"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6C583DAF-2354-483B-8322-2206B5297136}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert into stagging"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Insert into stagging.EventHandlers[OnPreValidate]"
          DTS:CreationName="OnPreValidate"
          DTS:DTSID="{9921422C-10BF-4D04-9239-A3C5F7F57CEB}"
          DTS:EventID="0"
          DTS:EventName="OnPreValidate"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{AFFBAB3F-F49E-407D-A7D5-2A83EAFD25A8}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Insert into stagging\File To Be Uploaded"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="File To Be Uploaded"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert into stagging\File To Be Uploaded.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[team]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[team]"
                      length="255"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[team]"
                      name="team"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[month]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[month]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[month]"
                      name="month"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[costsmonth]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[costsmonth]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[costsmonth]"
                      name="costsmonth"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[costsytd]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[costsytd]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[costsytd]"
                      name="costsytd"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[staffbudgetmonth]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[staffbudgetmonth]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[staffbudgetmonth]"
                      name="staffbudgetmonth"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[previousyrcm]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[previousyrcm]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[previousyrcm]"
                      name="previousyrcm"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[practicearea]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[practicearea]"
                      length="255"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[practicearea]"
                      name="practicearea"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[businessline]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[businessline]"
                      length="255"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[businessline]"
                      name="businessline"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[team]"
                      dataType="wstr"
                      length="255"
                      name="team" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[month]"
                      dataType="r8"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[costsmonth]"
                      dataType="r8"
                      name="costsmonth" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[costsytd]"
                      dataType="r8"
                      name="costsytd" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[staffbudgetmonth]"
                      dataType="r8"
                      name="staffbudgetmonth" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[previousyrcm]"
                      dataType="r8"
                      name="previousyrcm" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[practicearea]"
                      dataType="wstr"
                      length="255"
                      name="practicearea" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].ExternalColumns[businessline]"
                      dataType="wstr"
                      length="255"
                      name="businessline" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[team]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[team]"
                      name="team" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[month]"
                      dataType="r8"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[month]"
                      name="month" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[costsmonth]"
                      dataType="r8"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[costsmonth]"
                      name="costsmonth" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[costsytd]"
                      dataType="r8"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[costsytd]"
                      name="costsytd" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[staffbudgetmonth]"
                      dataType="r8"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[staffbudgetmonth]"
                      name="staffbudgetmonth" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[previousyrcm]"
                      dataType="r8"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[previousyrcm]"
                      name="previousyrcm" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[practicearea]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[practicearea]"
                      name="practicearea" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[businessline]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[businessline]"
                      name="businessline" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert into stagging\Upload Data"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Upload Data"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[team_costs_staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert into stagging\Upload Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[svr-liv-dwh-01.ExcelUpload]"
                  connectionManagerRefId="Package.ConnectionManagers[svr-liv-dwh-01.ExcelUpload]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].Columns[team]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="team"
                      externalMetadataColumnId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[team]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[team]" />
                    <inputColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].Columns[month]"
                      cachedDataType="r8"
                      cachedName="month"
                      externalMetadataColumnId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[month]" />
                    <inputColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].Columns[costsmonth]"
                      cachedDataType="r8"
                      cachedName="costsmonth"
                      externalMetadataColumnId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[costsmonth]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[costsmonth]" />
                    <inputColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].Columns[costsytd]"
                      cachedDataType="r8"
                      cachedName="costsytd"
                      externalMetadataColumnId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[costsytd]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[costsytd]" />
                    <inputColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].Columns[staffbudgetmonth]"
                      cachedDataType="r8"
                      cachedName="staffbudgetmonth"
                      externalMetadataColumnId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[staffbudgetmonth]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[staffbudgetmonth]" />
                    <inputColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].Columns[previousyrcm]"
                      cachedDataType="r8"
                      cachedName="previousyrcm"
                      externalMetadataColumnId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[previousyrcm]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[previousyrcm]" />
                    <inputColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].Columns[practicearea]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="practicearea"
                      externalMetadataColumnId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[practicearea]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[practicearea]" />
                    <inputColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].Columns[businessline]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="businessline"
                      externalMetadataColumnId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[businessline]"
                      lineageId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output].Columns[businessline]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[team]"
                      dataType="wstr"
                      length="255"
                      name="team" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      dataType="r8"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[costsmonth]"
                      dataType="r8"
                      name="costsmonth" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[costsytd]"
                      dataType="r8"
                      name="costsytd" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[staffbudgetmonth]"
                      dataType="r8"
                      name="staffbudgetmonth" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[previousyrcm]"
                      dataType="r8"
                      name="previousyrcm" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[practicearea]"
                      dataType="wstr"
                      length="255"
                      name="practicearea" />
                    <externalMetadataColumn
                      refId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input].ExternalColumns[businessline]"
                      dataType="wstr"
                      length="255"
                      name="businessline" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert into stagging\Upload Data.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert into stagging\Upload Data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert into stagging\Upload Data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert into stagging\Upload Data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert into stagging\Upload Data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Insert into stagging.Paths[Excel Source Output]"
              endId="Package\Insert into stagging\Upload Data.Inputs[OLE DB Destination Input]"
              name="Excel Source Output"
              startId="Package\Insert into stagging\File To Be Uploaded.Outputs[Excel Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move Data File To Archiving Directory and Rename"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="Move Data File To Processing Directory"
      DTS:DTSID="{a3e9f291-f5f3-4aa4-8305-5732c33bdcd7}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move Data File To Archiving Directory and Rename"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::ProcessingFile"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ArchiveFile"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move Data File To Processing Directory"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="Move Data File To Processing Directory"
      DTS:DTSID="{0158BD4A-CA61-4DD5-8C1E-CF7EE119CD30}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move Data File To Processing Directory"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Move Data File To Processing Directory.EventHandlers[OnPostExecute]"
          DTS:CreationName="OnPostExecute"
          DTS:DTSID="{E601DBE6-B27C-49A3-90B5-FAF48BA9E0B1}"
          DTS:EventID="0"
          DTS:EventName="OnPostExecute"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{D58E7DAB-80D4-4B55-AF38-75D44A00FC7A}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
        <DTS:EventHandler
          DTS:refId="Package\Move Data File To Processing Directory.EventHandlers[OnProgress]"
          DTS:CreationName="OnProgress"
          DTS:DTSID="{69B38A33-E352-40E8-BAEF-60A79A63AA23}"
          DTS:EventID="-3"
          DTS:EventName="OnProgress"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{CED5F859-A610-483A-8558-C4CB8E5845D6}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Move Data File To Processing Directory.EventHandlers[OnProgress]\Execute SQL Task"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{ac948c2f-18f8-45ed-b7af-651cb3c84780}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Execute SQL Task">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{482CC3A6-3DF2-46BA-807F-3D9AE6B2A4E4}"
                  SQLTask:SqlStmtSourceType="Variable"
                  SQLTask:SqlStatementSource="User::SQLInsertProcessing" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="MoveFile"
          TaskOverwriteDestFile="True"
          TaskSourcePath="User::DropFile"
          TaskIsSourceVariable="True"
          TaskDestinationPath="User::ProcessingPath"
          TaskIsDestinationVariable="True" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Move to Red_DW"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{522C35FD-BA34-4407-9E39-3E124DFC9610}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Move to Red_DW"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Move to Red_DW\ExcellUploads"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="ExcellUploads"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[team_costs_staging]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT *
  FROM [ExcelUpload].[dbo].[team_costs_staging]  b 
  WHERE NOT EXISTS (SELECT * FROM red_Dw.dbo.ds_mds_teamcosts  a
  WHERE 
  a.team COLLATE DATABASE_DEFAULT = b.team COLLATE DATABASE_DEFAULT AND 
  a.month = b.month  AND 
  a.practicearea COLLATE DATABASE_DEFAULT = b.practicearea COLLATE DATABASE_DEFAULT AND 
  a.businessline COLLATE DATABASE_DEFAULT =b.businessline COLLATE DATABASE_DEFAULT)
  AND team IS NOT NULL</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">2</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move to Red_DW\ExcellUploads.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[svr-liv-dwh-01.ExcelUpload]"
                  connectionManagerRefId="Package.ConnectionManagers[svr-liv-dwh-01.ExcelUpload]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[team]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[team]"
                      length="255"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[team]"
                      name="team"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[month]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[month]"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[month]"
                      name="month"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[costsmonth]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[costsmonth]"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[costsmonth]"
                      name="costsmonth"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[costsytd]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[costsytd]"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[costsytd]"
                      name="costsytd"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[staffbudgetmonth]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[staffbudgetmonth]"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[staffbudgetmonth]"
                      name="staffbudgetmonth"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[previousyrcm]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[previousyrcm]"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[previousyrcm]"
                      name="previousyrcm"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[practicearea]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[practicearea]"
                      length="255"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[practicearea]"
                      name="practicearea"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[businessline]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[businessline]"
                      length="255"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[businessline]"
                      name="businessline"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[team]"
                      dataType="wstr"
                      length="255"
                      name="team" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[month]"
                      dataType="r8"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[costsmonth]"
                      dataType="r8"
                      name="costsmonth" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[costsytd]"
                      dataType="r8"
                      name="costsytd" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[staffbudgetmonth]"
                      dataType="r8"
                      name="staffbudgetmonth" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[previousyrcm]"
                      dataType="r8"
                      name="previousyrcm" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[practicearea]"
                      dataType="wstr"
                      length="255"
                      name="practicearea" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].ExternalColumns[businessline]"
                      dataType="wstr"
                      length="255"
                      name="businessline" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[team]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[team]"
                      name="team" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[month]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[month]"
                      name="month" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[costsmonth]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[costsmonth]"
                      name="costsmonth" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[costsytd]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[costsytd]"
                      name="costsytd" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[staffbudgetmonth]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[staffbudgetmonth]"
                      name="staffbudgetmonth" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[previousyrcm]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[previousyrcm]"
                      name="previousyrcm" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[practicearea]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[practicearea]"
                      name="practicearea" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[businessline]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[businessline]"
                      name="businessline" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="order by D,PA,T,M on ExcelUploads"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input].Columns[team]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="team"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[team]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input].Columns[month]"
                      cachedDataType="r8"
                      cachedName="month"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[month]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input].Columns[costsmonth]"
                      cachedDataType="r8"
                      cachedName="costsmonth"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[costsmonth]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input].Columns[costsytd]"
                      cachedDataType="r8"
                      cachedName="costsytd"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[costsytd]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input].Columns[staffbudgetmonth]"
                      cachedDataType="r8"
                      cachedName="staffbudgetmonth"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[staffbudgetmonth]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input].Columns[previousyrcm]"
                      cachedDataType="r8"
                      cachedName="previousyrcm"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[previousyrcm]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input].Columns[practicearea]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="practicearea"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[practicearea]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input].Columns[businessline]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="businessline"
                      lineageId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[businessline]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[team]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[team]"
                      name="team"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[team]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[month]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[month]"
                      name="month"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[month]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[costsmonth]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[costsmonth]"
                      name="costsmonth">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[costsmonth]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[costsytd]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[costsytd]"
                      name="costsytd">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[costsytd]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[staffbudgetmonth]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[staffbudgetmonth]"
                      name="staffbudgetmonth">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[staffbudgetmonth]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[previousyrcm]"
                      dataType="r8"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[previousyrcm]"
                      name="previousyrcm">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[previousyrcm]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[practicearea]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[practicearea]"
                      name="practicearea"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[practicearea]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[businessline]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[businessline]"
                      name="businessline"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output].Columns[businessline]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Move to Red_DW\Red_DW Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Red_DW Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[ds_mds_teamcosts]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Move to Red_DW\Red_DW Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[svr-liv-dwh-01.red_dw]"
                  connectionManagerRefId="Package.ConnectionManagers[svr-liv-dwh-01.red_dw]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].Columns[team]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="team"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[team]"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[team]" />
                    <inputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].Columns[month]"
                      cachedDataType="r8"
                      cachedName="month"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[month]" />
                    <inputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].Columns[costsmonth]"
                      cachedDataType="r8"
                      cachedName="costsmonth"
                      externalMetadataColumnId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[costsmonth]"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[costsmonth]" />
                    <inputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].Columns[costsytd]"
                      cachedDataType="r8"
                      cachedName="costsytd"
                      externalMetadataColumnId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[costsytd]"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[costsytd]" />
                    <inputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].Columns[staffbudgetmonth]"
                      cachedDataType="r8"
                      cachedName="staffbudgetmonth"
                      externalMetadataColumnId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[staffbudgetmonth]"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[staffbudgetmonth]" />
                    <inputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].Columns[previousyrcm]"
                      cachedDataType="r8"
                      cachedName="previousyrcm"
                      externalMetadataColumnId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[previousyrcm]"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[previousyrcm]" />
                    <inputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].Columns[practicearea]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="practicearea"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[practicearea]"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[practicearea]" />
                    <inputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].Columns[businessline]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="businessline"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[businessline]"
                      lineageId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output].Columns[businessline]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[team]"
                      dataType="wstr"
                      length="255"
                      name="team" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      dataType="r8"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[costsmonth]"
                      dataType="numeric"
                      name="costsmonth"
                      precision="13"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[costsytd]"
                      dataType="numeric"
                      name="costsytd"
                      precision="13"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[staffbudgetmonth]"
                      dataType="numeric"
                      name="staffbudgetmonth"
                      precision="13"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[previousyrcm]"
                      dataType="numeric"
                      name="previousyrcm"
                      precision="13"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[practicearea]"
                      dataType="wstr"
                      length="255"
                      name="practicearea" />
                    <externalMetadataColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input].ExternalColumns[businessline]"
                      dataType="wstr"
                      length="255"
                      name="businessline" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Move to Red_DW\Red_DW Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Move to Red_DW\Red_DW Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Move to Red_DW\Red_DW Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Move to Red_DW\Red_DW Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Move to Red_DW.Paths[OLE DB Source Output]"
              endId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Move to Red_DW\ExcellUploads.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Move to Red_DW.Paths[Sort Output]"
              endId="Package\Move to Red_DW\Red_DW Destination.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Run Red_dw"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{98c06bd9-67d5-4ed9-b9b7-50ae2b365d8c}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Run Red_dw"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{7F7CE7DA-6990-4C4A-908B-4B2477B59DBD}"
          SQLTask:SqlStatementSource="  DECLARE&#xA;&#x9;@v_result                   INT&#xA;&#x9;,@v_return_code              VARCHAR(1)&#xA;&#x9;,@v_return_msg               VARCHAR(256)&#xA;&#x9;, @p_sequence         integer&#xA;&#x9;, @p_job_name         varchar(256)&#xA;&#x9;, @p_task_name        varchar(256)&#xA;&#x9;, @p_job_id           integer&#xA;&#x9;, @p_task_id          integer&#xA;&#xA;EXEC Ws_Job_Release @p_sequence, @p_job_name, @p_task_name, @p_job_id, @p_task_id, 'ad_hoc_team_costs_update', @v_return_code OUTPUT, @v_return_msg OUTPUT, @v_result OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Stage Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{c9aa72c7-bdee-4140-bd83-f17ef0bc05ce}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Stage Table"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{482CC3A6-3DF2-46BA-807F-3D9AE6B2A4E4}"
          SQLTask:SqlStmtSourceType="Variable"
          SQLTask:SqlStatementSource="User::TruncateStageTable" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Watch For Incoming Excel File"
      DTS:CreationName="Microsoft.WmiEventWatcherTask"
      DTS:Description="File Watcher"
      DTS:Disabled="True"
      DTS:DTSID="{BA572F52-9E34-4188-A0A2-36FDC8FBEC96}"
      DTS:ExecutableType="Microsoft.WmiEventWatcherTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Watch For Incoming Excel File"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Watch For Incoming Excel File.EventHandlers[WMIEventWatcherEventOccurred]"
          DTS:CreationName="WMIEventWatcherEventOccurred"
          DTS:DTSID="{F4CFCDCB-A48E-4755-9172-1C508F1631B7}"
          DTS:EventID="-3"
          DTS:EventName="WMIEventWatcherEventOccurred"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{1A8FC520-0CFD-416B-AEC1-AC651584F6A1}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Watch For Incoming Excel File.EventHandlers[WMIEventWatcherEventOccurred]\Check File Availability"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{FE8240B6-E6C4-4F72-ABC4-8C233E98FE47}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check File Availability">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c9127143cf70448f89d800911e8d1e4d"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::DropPath,User::FileMask"
                  ReadWriteVariables="User::FileName">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c9127143cf70448f89d800911e8d1e4d.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{56b627bf-d12a-49f9-a6b0-4bc2a7c72f02}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c9127143cf70448f89d800911e8d1e4d</RootNamespace>
    <AssemblyName>ST_c9127143cf70448f89d800911e8d1e4d</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Threading;
#endregion

namespace ST_c9127143cf70448f89d800911e8d1e4d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {
                // store read-only variable values into local variables, eases readability
                string dropPath = Dts.Variables["DropPath"].Value.ToString();
                string fileMask = Dts.Variables["FileMask"].Value.ToString();

                // We know there is a new file that can be processed because
                // the WMI Event Watcher fired an event, however we do not know if the user or process
                // supplying the file has completed uploading it. We will loop over drop directory
                // looking for files that meet our criteria and once we find one we will make sure
                // the supplier has completed their upload process by checking to see if we can gain 
                // exclusive access to the file. Once we can gain exclusive access to the file we will know
                // the upload is complete and we can allow the rest of the SSIS package to continue.
                foreach (string dataFile in Directory.GetFiles(dropPath, fileMask))
                {
                    // Loop indefinitely checking if we can access the data file.
                    while (1 == 1)
                    {
                        try
                        {
                            // Attempt to gain access to the file.
                            using (Stream stream = new FileStream(dataFile, FileMode.Open))
                            {
                            }
                            // If we made it here no exception was thrown meaning we 
                            // could access the file.

                            // Store the file name for use later in the package.
                            Dts.Variables["FileName"].Value = Path.GetFileName(dataFile);

                            // We will break the loop and allow the rest of the package to 
                            // continue processing.
                            break;
                        }
                        catch (IOException)
                        {
                            // We are not interested in ending the program when an IOException
                            // occurs in this area. This type of exception means we could not 
                            // gain access to the file.
                            // In general, programming algorithms that leverage exceptions for 
                            // control flow are frowned upon. However in the case of file access 
                            // it is an acceptable pattern.
                        }

                        // Wait 5 seconds before checking again whether the file can be used.
                        Thread.Sleep(5000);
                    }
                    break;
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch
            {
                // Exception occurred that we did not expect.
                Dts.TaskResult = (int)ScriptResults.Failure;
                throw;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_c9127143cf70448f89d800911e8d1e4d</msb:CodeName>
    <msb:DisplayName>ST_c9127143cf70448f89d800911e8d1e4d</msb:DisplayName>
    <msb:ProjectId>{F75A5E01-6D13-4E84-99F1-70B050D37224}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c9127143cf70448f89d800911e8d1e4d.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c9127143cf70448f89d800911e8d1e4d.Properties.Settings.get_Default():ST_c9127143cf70448f89d800911e8d1e4d.Properties.Sett" +
    "ings")]

namespace ST_c9127143cf70448f89d800911e8d1e4d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c9127143cf70448f89d800911e8d1e4d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c9127143cf70448f89d800911e8d1e4d")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c9127143cf70448f89d800911e8d1e4d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c9127143cf70448f89d800911e8d1e4d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c9127143cf70448f89d800911e8d1e4d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c9127143cf70448f89d800911e8d1e4d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c9127143cf70448f89d800911e8d1e4d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c9127143cf70448f89d800911e8d1e4d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANEMHVwAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAXi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAwvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
LwAAAAAAAEgAAAACAAUAqCEAAKwMAAABAAAAAAAAAFQuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwC7AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoCKBAAAApvEQAACnITAABwbxIAAApvEwAACm8UAAAKCgYoFQAACgsWDCtNBwiaDQAJ
GXMWAAAKEwTeDBEELAcRBG8XAAAK3AIoEAAACm8RAAAKciUAAHBvEgAACgkoGAAACm8ZAAAK3hUm
3gAgiBMAACgaAAAKK7cIB45pMq0CKBAAAAoWbxsAAAreDyYCKBAAAAoXbxsAAAr+GioAASgAAAIA
WAACWgAMAAAAAAAATwA5iAADEAAAAQAAAACrqwAPEQAAAR4CKBwAAAoqHgIoHQAACiqufgEAAAQt
HnI3AABw0AMAAAIoHgAACm8fAAAKcyAAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAA
BCoeAighAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAEAQAACN+AAB8BAAA6AUAACNTdHJpbmdzAAAAAGQKAACsAAAAI1VTABALAAAQAAAAI0dVSUQA
AAAgCwAAjAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACUAAAAFAAAABgAA
AAkAAAABAAAAIQAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAM8D
AQAAAAAABgBfArwEBgDuArwEBgCrAakEDwAwBQAABgDYAVgEBgBCAlgEBgAjAlgEBgDVAlgEBgB/
AlgEBgCYAlgEBgDvAVgEBgAKAjcDCgCzAn4DCgAiAX4DBgD7AwoABgBqBAoABgCsBQsEBgASBAsE
BgCOAakEBgCMBNwEBgB2BEMEDgBeAbkDDgC/AbkDDgA+AS4EBgBzAbwECgCnA34DEgByBc0AEgCI
AM0ABgDbBQoABgD3AwoABgB/AAoABgCRAAsEBgBaAwoABgBoACYDBgDtAAsEBgCdAAsEBgDSBVgE
AAAAAAEAAAAAAAEAAQABABAAIwREADkAAQABAAAAEADjBD8FRQABAAMAAAEQAIUFPwVhAAMABwAD
AQAAngUAAEkABAAKABEAFwSNABEAEgGRABEAbwCVAAYGMwCZAFaAjgWcAFaA8gCcAFAgAAAAAIYA
KQQGAAEAQCEAAAAAhhicBAYAAQBIIQAAAACDGJwEBgABAFAhAAAAAJMIiASgAAEAfCEAAAAAkwj6
AKUAAQCDIQAAAACTCAYBqgABAIshAAAAAJYIswWwAAIAkiEAAAAAhhicBAYAAgCaIQAAAACRGKIE
tQACAAAAAQAgAwkAnAQBABEAnAQGABkAnAQKACkAnAQQADEAnAQQADkAnAQQAEEAnAQQAEkAnAQQ
AFEAnAQQAFkAnAQQAGEAnAQQAGkAnAQGAJkAnAQGALkAnAQVAMkAnAQGAHEAlgUlANEAbgUqANkA
AgQvAOEADAM1AIkAUQM5AOkAfAU9APEAnAREAAEBVgEGAAkBwQBLAOEAFgNQABEBggRVANEAvwUB
AHEAnAQGAIkAnAQGABkBrwBaABkBzgVjAKEAnARpAMEAnAQGAAgAFACDAAgAGACIACkAcwDwAC4A
CwDIAC4AEwDRAC4AGwDwAC4AIwD5AC4AKwAiAS4AMwAiAS4AOwAiAS4AQwD5AC4ASwAoAS4AUwAi
AS4AWwA/AUMAYwCIAEkAcwDwAGEAewCIAGMAawCIABsAAwABAAQAAwAAAIwEuQAAABoBvgAAALcF
wwACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAABEb6G8AAAAAAABEAAAABAAAAAAAAAAA
AAAAcQA7AAAAAAAOAAAAAAAAAAAAAAB6AF8DAAAAAAQAAAAAAAAAAAAAAHEACwQAAAAADgAAAAAA
AAAAAAAAegAUAAAAAAAAAAAAAQAAAO0EAAAFAAIAAAAAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFNUX2M5MTI3MTQzY2Y3
MDQ0OGY4OWQ4MDA5MTFlOGQxZTRkAFRocmVhZABkZWZhdWx0SW5zdGFuY2UARmlsZU1vZGUAVmFy
aWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAR2V0
RmlsZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlU
aXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRp
b25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1
Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRy
eVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5UaHJlYWRpbmcA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBQYXRoAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNj
cmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9jOTEyNzE0M2NmNzA0NDhm
ODlkODAwOTExZThkMWU0ZC5kbGwARmlsZVN0cmVhbQBnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5SZWZsZWN0aW9uAElPRXhjZXB0aW9uAEN1bHR1cmVJbmZvAFNsZWVwAGdldF9S
ZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYzkxMjcxNDNjZjcwNDQ4
Zjg5ZDgwMDkxMWU4ZDFlNGQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNUX2M5MTI3MTQzY2Y3MDQ0OGY4OWQ4MDA5MTFlOGQxZTRkLlByb3BlcnRpZXMAZ2V0
X1ZhcmlhYmxlcwBHZXRGaWxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AERpcmVjdG9y
eQAAAAAAEUQAcgBvAHAAUABhAHQAaAAAEUYAaQBsAGUATQBhAHMAawAAEUYAaQBsAGUATgBhAG0A
ZQAAcVMAVABfAGMAOQAxADIANwAxADQAMwBjAGYANwAwADQANAA4AGYAOAA5AGQAOAAwADAAOQAx
ADEAZQA4AGQAMQBlADQAZAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAAAAS70yZBgnuUKZUhh/jSK/UwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQkHBQ4dDggO
Ej0EIAASaQQgABJtBSABEnEcAyAAHAMgAA4GAAIdDg4OBiACAQ4RfQQAAQ4OBCABARwEAAEBCAgA
ARKAjRGAkQUgABKAlQcgAgEOEoCVCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElEDBhJV
AwYSEAIGCAMGERQEAAASUQQAABJVBQABARJVBAAAEhADAAABBAgAElEECAASVQQIABIQCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9jOTEyNzE0
M2NmNzA0NDhmODlkODAwOTExZThkMWU0ZAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA0LwAAAAAAAAAAAABOLwAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAQC8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDobxEbAAABAOhvERs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGMAOQAxADIANwAxADQAMwBjAGYANwAwADQANAA4AGYAOAA5AGQAOAAwADAAOQAx
ADEAZQA4AGQAMQBlADQAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADkAMgA5AC4AMgA4ADYANAA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGMAOQAxADIANwAxADQAMwBjAGYANwAwADQANAA4AGYAOAA5AGQAOAAwADAAOQAxADEA
ZQA4AGQAMQBlADQAZAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYwA5ADEAMgA3ADEANAAzAGMAZgA3ADAANAA0ADgAZgA4ADkAZAA4ADAA
MAA5ADEAMQBlADgAZAAxAGUANABkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGMAOQAxADIANwAxADQAMwBjAGYANwAwADQANAA4AGYAOAA5AGQAOAAwADAA
OQAxADEAZQA4AGQAMQBlADQAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgA5ADIAOQAuADIAOAA2ADQAOAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA5ADIAOQAuADIAOAA2ADQAOAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <WMIEWTaskData
          WMIConnectionName="{A8A4D568-E676-4B31-8494-F48084A1BBCF}"
          WQLQuerySourceType="Variable"
          WQLQuerySource="User::WqlQuerySource"
          Timeout="1800" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{412EB5E8-5302-4638-881D-EBF17A45F8D4}"
      DTS:From="Package\Watch For Incoming Excel File"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Move Data File To Processing Directory" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{1FC289E4-3FE0-46B0-A43B-68B79508ADF3}"
      DTS:From="Package\Move Data File To Processing Directory"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Truncate Stage Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{25A6BAB7-0956-4EE2-92CB-BABDBE380777}"
      DTS:From="Package\Move to Red_DW"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Move Data File To Archiving Directory and Rename" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{98043B24-DE19-4A32-BFDC-69A666116E7F}"
      DTS:From="Package\Insert into stagging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Move to Red_DW" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{03C0CA8E-1FC9-4B70-BBCA-B2F2126D89E1}"
      DTS:From="Package\Move Data File To Archiving Directory and Rename"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Run Red_dw" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{9D2F3E7D-381A-4587-A3B7-38E78EB28271}"
      DTS:From="Package\Truncate Stage Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Insert into stagging" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="171,42"
          Id="Package\Insert into stagging"
          TopLeft="214.5,395.333333333333" />
        <NodeLayout
          Size="319,42"
          Id="Package\Move Data File To Archiving Directory and Rename"
          TopLeft="99.5,610.333333333333" />
        <NodeLayout
          Size="263,42"
          Id="Package\Move Data File To Processing Directory"
          TopLeft="180.5,207.333333333333" />
        <NodeLayout
          Size="161,42"
          Id="Package\Move to Red_DW"
          TopLeft="217.5,500.333333333333" />
        <NodeLayout
          Size="180,42"
          Id="Package\Truncate Stage Table"
          TopLeft="241.25,309" />
        <NodeLayout
          Size="221,42"
          Id="Package\Watch For Incoming Excel File"
          TopLeft="204.5,117.583333333333" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="313.5,159.583333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.75"
              Start="0,0"
              End="0,40.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="312,249.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.25,59.666666666667"
              Start="0,0"
              End="19.25,52.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8333333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.8333333333335"
                    Point2="0,29.8333333333335"
                    Point3="4,29.8333333333335" />
                  <mssgle:LineSegment
                    End="15.25,29.8333333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="15.25,29.8333333333335"
                    Point2="19.25,29.8333333333335"
                    Point3="19.25,33.8333333333335" />
                  <mssgle:LineSegment
                    End="19.25,52.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="298,542.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.9999999999998,68"
              Start="0,0"
              End="-38.9999999999998,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30"
                    Point2="0,34"
                    Point3="-4,34" />
                  <mssgle:LineSegment
                    End="-34.9999999999998,34" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.9999999999998,34"
                    Point2="-38.9999999999998,34"
                    Point3="-38.9999999999998,38" />
                  <mssgle:LineSegment
                    End="-38.9999999999998,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="299,437.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63.0000000000001"
              Start="0,0"
              End="0,55.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="331.25,351">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-31.25,44.333333333333"
              Start="0,0"
              End="-31.25,36.833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.1666666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.1666666666665"
                    Point2="0,22.1666666666665"
                    Point3="-4,22.1666666666665" />
                  <mssgle:LineSegment
                    End="-27.25,22.1666666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="-27.25,22.1666666666665"
                    Point2="-31.25,22.1666666666665"
                    Point3="-31.25,26.1666666666665" />
                  <mssgle:LineSegment
                    End="-31.25,36.833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="139,42"
          Id="Package\Run Red_dw"
          TopLeft="165,694" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="259,652.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.5,41.666666666667"
              Start="0,0"
              End="-24.5,34.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.8333333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.8333333333335"
                    Point2="0,20.8333333333335"
                    Point3="-4,20.8333333333335" />
                  <mssgle:LineSegment
                    End="-20.5,20.8333333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.5,20.8333333333335"
                    Point2="-24.5,20.8333333333335"
                    Point3="-24.5,24.8333333333335" />
                  <mssgle:LineSegment
                    End="-24.5,34.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Insert into stagging">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="137,42"
          Id="Package\Insert into stagging\Upload Data"
          TopLeft="142,264" />
        <NodeLayout
          Size="173,42"
          Id="Package\Insert into stagging\File To Be Uploaded"
          TopLeft="119,91" />
        <EdgeLayout
          Id="Package\Insert into stagging.Paths[Excel Source Output]"
          TopLeft="208,133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,131"
              Start="0,0"
              End="0,123.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,123.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Insert into stagging\File To Be Uploaded">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert into stagging\Upload Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Move Data File To Processing Directory.EventHandlers[OnProgress]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Move Data File To Processing Directory.EventHandlers[OnProgress]\Execute SQL Task"
          TopLeft="331,84" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Move to Red_DW">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="246,42"
          Id="Package\Move to Red_DW\order by D,PA,T,M on ExcelUploads"
          TopLeft="76,222" />
        <NodeLayout
          Size="143,42"
          Id="Package\Move to Red_DW\ExcellUploads"
          TopLeft="121,96" />
        <NodeLayout
          Size="176,42"
          Id="Package\Move to Red_DW\Red_DW Destination"
          TopLeft="65,464" />
        <EdgeLayout
          Id="Package\Move to Red_DW.Paths[Sort Output]"
          TopLeft="199,264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-46,200"
              Start="0,0"
              End="-46,192.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,96" />
                  <mssgle:CubicBezierSegment
                    Point1="0,96"
                    Point2="0,100"
                    Point3="-4,100" />
                  <mssgle:LineSegment
                    End="-42,100" />
                  <mssgle:CubicBezierSegment
                    Point1="-42,100"
                    Point2="-46,100"
                    Point3="-46,104" />
                  <mssgle:LineSegment
                    End="-46,192.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Move to Red_DW.Paths[OLE DB Source Output]"
          TopLeft="195.75,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84"
              Start="0,0"
              End="0,76.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,76.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Move to Red_DW\ExcellUploads">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Move to Red_DW\Red_DW Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <DtsEventHandler
    design-time-name="Package\Watch For Incoming Excel File.EventHandlers[WMIEventWatcherEventOccurred]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="180,42"
          Id="Package\Watch For Incoming Excel File.EventHandlers[WMIEventWatcherEventOccurred]\Check File Availability"
          TopLeft="162,145" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>